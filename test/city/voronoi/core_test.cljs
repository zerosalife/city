(ns city.voronoi.core-test
  (:require [cljs.test :refer-macros [deftest is testing]]
            [city.voronoi.core :as core]
            [city.voronoi.point :as point]))

(def p point/Point)

(deftest center-of-triangle-test
  (is (= (p. 10 10)
         (core/center-of-triangle [(p. 30 0) (p. 0 0) (p. 0 30)]))))

(deftest sort-triangles-test
  (is (= [[(p. 0 0) (p. 5 5) (p. 10 0)]
          [(p. 10 0) (p. 5 5) (p. 5 -5)]
          [(p. 5 -5) (p. 5 5) (p. 2 2)]]
         (core/sort-triangles [[(p. 0 0) (p. 5 5) (p. 10 0)]
                               [(p. 5 -5) (p. 5 5) (p. 2 2)]
                               [(p. 10 0) (p. 5 5) (p. 5 -5)]]))))

#_(clojure.data/diff
 {:points
  [(point/map->Point {:x 2  :y 2})
   (point/map->Point {:x 1  :y 4})
   (point/map->Point {:x 4  :y 1})
   (point/map->Point   {:x -10  :y -10})
   (point/map->Point {:x -10  :y 10})
   (point/map->Point {:x 10  :y 10})
   (point/map->Point   {:x 10  :y -10})]
  :cells
  [[(point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})
    (point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335})
    (point/map->Point {:x -2.3333333333333335  :y -1.3333333333333333})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point    {:x 0.3333333333333333  :y 8})
    (point/map->Point    {:x 5  :y 5})
    (point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335})
    (point/map->Point    {:x -2.3333333333333335  :y -1.3333333333333333})]
   [(point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})
    (point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335})
    (point/map->Point {:x 5  :y 5})
    (point/map->Point {:x 8  :y 0.3333333333333333})
    (point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point {:x -2.3333333333333335  :y -1.3333333333333333})
    (point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})
    (point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point {:x 0.3333333333333333  :y 8})]
   [(point/map->Point {:x 0.3333333333333333  :y 8})
    (point/map->Point {:x 5  :y 5})
    (point/map->Point {:x 8  :y 0.3333333333333333})]
   [(point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})
    (point/map->Point {:x 8  :y 0.3333333333333333})]]
  :edges
  [[(point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})
    (point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335})]
   [(point/map->Point {:x -2.3333333333333335  :y -1.3333333333333333})
    (point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335})]
   [(point/map->Point {:x -2.3333333333333335  :y -1.3333333333333333})
    (point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point {:x 0.3333333333333333  :y 8})]
   [(point/map->Point {:x 0.3333333333333333  :y 8}) (point/map->Point {:x 5  :y 5})]
   [(point/map->Point {:x 2.3333333333333335  :y 2.3333333333333335}) (point/map->Point {:x 5  :y 5})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point {:x -2.3333333333333335  :y -1.3333333333333333})]
   [(point/map->Point {:x 5  :y 5}) (point/map->Point {:x 8  :y 0.3333333333333333})]
   [(point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})
    (point/map->Point {:x 8  :y 0.3333333333333333})]
   [(point/map->Point {:x -1.3333333333333333  :y -2.3333333333333335})
    (point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})]
   [(point/map->Point {:x -6.333333333333333  :y 1.3333333333333333})
    (point/map->Point {:x 1.3333333333333333  :y -6.333333333333333})]
   [(point/map->Point {:x 0.3333333333333333  :y 8}) (point/map->Point {:x 8  :y 0.3333333333333333})]]}

 {:points [(point/Point. 2.0 2.0)
           (point/Point. 1.0 4.0)
           (point/Point. 4.0 1.0)
           (point/Point. -10.0 -10.0)
           (point/Point. -10.0 10.0)
           (point/Point. 10.0 10.0)
           (point/Point. 10.0 -10.0)]
  :cells [[(point/Point. 2.3333333333333335 2.3333333333333335)
           (point/Point. -2.3333333333333335 -1.3333333333333333)
           (point/Point. -1.3333333333333333 -2.3333333333333335)]
          [(point/Point. 5.0 5.0)
           (point/Point. 2.3333333333333335 2.3333333333333335)
           (point/Point. -2.3333333333333335 -1.3333333333333333)
           (point/Point. -6.333333333333333 1.3333333333333333)
           (point/Point. 0.3333333333333333 8.0)]
          [(point/Point. 5.0 5.0)
           (point/Point. 2.3333333333333335 2.3333333333333335)
           (point/Point. -1.3333333333333333 -2.3333333333333335)
           (point/Point. 1.3333333333333333 -6.333333333333333)
           (point/Point. 8.0 0.3333333333333333)]
          [(point/Point. -2.3333333333333335 -1.3333333333333333)
           (point/Point. -6.333333333333333 1.3333333333333333)]
          [(point/Point. -6.333333333333333 1.3333333333333333)
           (point/Point. 0.3333333333333333 8.0)]
          [(point/Point. 5.0 5.0)
           (point/Point. 8.0 0.3333333333333333)]
          [(point/Point. 8.0 0.3333333333333333)
           (point/Point. 1.3333333333333333 -6.333333333333333)]]
  :edges [[(point/Point. -2.3333333333333335 -1.3333333333333333)
           (point/Point. 2.3333333333333335 2.3333333333333335)]
          [(point/Point. -2.3333333333333335 -1.3333333333333333)
           (point/Point. -1.3333333333333333 -2.3333333333333335)]
          [(point/Point. -1.3333333333333333 -2.3333333333333335)
           (point/Point. 2.3333333333333335 2.3333333333333335)]
          [(point/Point. 2.3333333333333335 2.3333333333333335)
           (point/Point. 5.0 5.0)]
          [(point/Point. -6.333333333333333 1.3333333333333333)
           (point/Point. -2.3333333333333335 -1.3333333333333333)]
          [(point/Point. -6.333333333333333 1.3333333333333333)
           (point/Point. 0.3333333333333333 8.0)]
          [(point/Point. 0.3333333333333333 8.0)
           (point/Point. 5.0 5.0)]
          [(point/Point. -1.3333333333333333 -2.3333333333333335)
           (point/Point. 1.3333333333333333 -6.333333333333333)]
          [(point/Point. 1.3333333333333333 -6.333333333333333)
           (point/Point. 8.0 0.3333333333333333)]
          [(point/Point. 5.0 5.0)
           (point/Point. 8.0 0.3333333333333333)]]})

(deftest diagram-test
  (is (= {:points [(p. 2.0 2.0)
                   (p. 1.0 4.0)
                   (p. 4.0 1.0)
                   (p. -10.0 -10.0)
                   (p. -10.0 10.0)
                   (p. 10.0 10.0)
                   (p. 10.0 -10.0)],
          :cells [[(p. 2.3333333333333335 2.3333333333333335)
                   (p. -2.3333333333333335 -1.3333333333333333)
                   (p. -1.3333333333333333 -2.3333333333333335)]
                  [(p. 5.0 5.0)
                   (p. 2.3333333333333335 2.3333333333333335)
                   (p. -2.3333333333333335 -1.3333333333333333)
                   (p. -6.333333333333333 1.3333333333333333)
                   (p. 0.3333333333333333 8.0)]
                  [(p. 5.0 5.0)
                   (p. 2.3333333333333335 2.3333333333333335)
                   (p. -1.3333333333333333 -2.3333333333333335)
                   (p. 1.3333333333333333 -6.333333333333333)
                   (p. 8.0 0.3333333333333333)]
                  [(p. -2.3333333333333335 -1.3333333333333333)
                   (p. -6.333333333333333 1.3333333333333333)]
                  [(p. -6.333333333333333 1.3333333333333333)
                   (p. 0.3333333333333333 8.0)]
                  [(p. 5.0 5.0)
                   (p. 8.0 0.3333333333333333)]
                  [(p. 8.0 0.3333333333333333)
                   (p. 1.3333333333333333 -6.333333333333333)]],
          :edges [[(p. -2.3333333333333335 -1.3333333333333333)
                   (p. 2.3333333333333335 2.3333333333333335)]
                  [(p. -2.3333333333333335 -1.3333333333333333)
                   (p. -1.3333333333333333 -2.3333333333333335)]
                  [(p. -1.3333333333333333 -2.3333333333333335)
                   (p. 2.3333333333333335 2.3333333333333335)]
                  [(p. 2.3333333333333335 2.3333333333333335)
                   (p. 5.0 5.0)]
                  [(p. -6.333333333333333 1.3333333333333333)
                   (p. -2.3333333333333335 -1.3333333333333333)]
                  [(p. -6.333333333333333 1.3333333333333333)
                   (p. 0.3333333333333333 8.0)]
                  [(p. 0.3333333333333333 8.0)
                   (p. 5.0 5.0)]
                  [(p. -1.3333333333333333 -2.3333333333333335)
                   (p. 1.3333333333333333 -6.333333333333333)]
                  [(p. 1.3333333333333333 -6.333333333333333)
                   (p. 8.0 0.3333333333333333)]
                  [(p. 5.0 5.0) (p. 8.0 0.3333333333333333)]]}
         (core/diagram [(p. 2 2)
                        (p. 1 4)
                        (p. 4 1)
                        (p. -10 -10)
                        (p. -10 10)
                        (p. 10 10)
                        (p. 10 -10)]))))

#_(cljs.pprint/pprint (core/diagram [(point/Point. 2 2)
                                   (point/Point. 1 4)
                                   (point/Point. 4 1)
                                   (point/Point. -10 -10)
                                   (point/Point. -10 10)
                                   (point/Point. 10 10)
                                   (point/Point. 10 -10)]))
